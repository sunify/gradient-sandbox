{
  "version": 3,
  "file": "main.css",
  "sources": [
    "../App.svelte",
    "../ColorPicker.svelte",
    "../Gradient.svelte",
    "../StopsInput.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import eases from 'eases';\n  import StopsInput from './StopsInput.svelte';\n  import Gradient from './Gradient.svelte';\n  import lerpColor from '@sunify/lerp-color';\n  import { makeGradient } from './make-gradient';\n\n  function shuffle(arr) {\n    return arr.sort(() => Math.sign(0.5 - Math.random()));\n  }\n\n  const coolorsLink = 'https://coolors.co/fb5012-01fdf6-cbbaed-e9df00-03fcba';\n  function parseCoolors(link) {\n    return link.replace('https://coolors.co/', '').split('-').map(c => `#${c}`)\n  }\n\n  const availableColors = parseCoolors(\n    'https://coolors.co/4c1a57-ff3cc7-f0f600-00e5e8-007c77'\n  );\n\n  let stops = [0, 0.25, 0.5, 0.75, 1];\n  let palette = shuffle(parseCoolors(coolorsLink));\n  let stepsCount = 500;\n  let easing = 'linear';\n  let approxSteps = 10;\n  let palette2;\n\n  $: {\n    const grad = makeGradient(palette, stops);\n    palette2 = Array.from(\n      { length: approxSteps + 1 },\n      (_, i) => grad(eases[easing](i / approxSteps))\n    );\n  };\n\n  function handleKeyDown(e) {\n    if (e.keyCode === 32) {\n      e.preventDefault();\n      palette = shuffle(palette);\n    }\n  }\n</script>\n\n<style>\n  :global(body) {\n    margin: 0;\n    font-family: Arial, Helvetica, sans-serif;\n    width: 100%;\n    height: 100%;\n    position: relative;\n  }\n\n  .gradient-wrapper {\n    height: 50vh;\n    padding: 20px 40px;\n  }\n\n  input {\n    width: 300px;\n  }\n\n  .ui {\n    padding: 20px;\n  }\n</style>\n\n<svelte:body on:keydown={handleKeyDown} />\n\n<StopsInput\n  value={stops}\n  palette={palette}\n  availableColors={availableColors}\n  on:input={e => {\n    if (e.detail.stops) {\n      stops = e.detail.stops;\n    }\n    if (e.detail.palette) {\n      palette = e.detail.palette;\n    }\n  }}\n/>\n\n<div class=\"gradient-wrapper\">\n  <Gradient\n    palette={palette}\n    stops={stops}\n    stepsCount={stepsCount}\n    easing={eases[easing]}\n    />\n</div>\n\n<div class=\"gradient-wrapper\">\n  <Gradient\n    palette={palette2}\n    stepsCount={stepsCount}\n    />\n</div>\n\n<div class=\"ui\">\n  <input type=\"range\" min=\"2\" max=\"1000\" step=\"1\" bind:value={approxSteps} />\n  <br />\n  Approximation steps: {approxSteps}\n  <hr />\n  <input type=\"range\" min=\"5\" max=\"10000\" step=\"1\" bind:value={stepsCount} />\n  <br />\n  Gradient steps: {stepsCount}\n  <hr />\n  <select bind:value={easing}>\n  {#each Object.keys(eases) as easing}\n    <option value={easing}>{easing}</option>\n  {/each}\n  </select>\n\n  <hr />\n  <input\n    style=\"width: 100%;\"\n    type=\"text\"\n    readonly\n    value={`['${palette2.join(\"', '\")}']`}\n    />\n  <hr />\n  <input\n    style=\"width: 100%;\"\n    type=\"text\"\n    readonly\n    value={`linear-gradient(to right, ${palette2.join(\", \")})`}\n    />\n</div>",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n\n  export let availableColors = [];\n\n  const dispatch = createEventDispatcher();\n\n  function handleColorClick(color) {\n    dispatch('pick', color);\n  }\n\n  let selectedColor;\n</script>\n\n<style>\n  .colorPicker {\n    position: relative;\n    width: 60px;\n    background-color: #ffffff;\n    box-shadow: rgba(0, 0, 0, 0.3) 0 0 2px;\n    padding: 10px;\n  }\n\n  .color {\n    height: 20px;\n    cursor: pointer;\n    background-color: currentColor;\n    margin-bottom: 10px;\n  }\n</style>\n\n<div class=\"colorPicker\">\n  {#each [...availableColors, selectedColor] as color}\n    <div class=\"color\" style=\"color: {color}\" on:click={e => handleColorClick(color)} />\n  {/each}\n\n  <input type=\"color\" bind:value={selectedColor} />\n</div>",
    "<script>\n  import { makeGradient } from './make-gradient';\n\n  export let stepsCount = 10;\n  export let palette;\n  export let stops = [];\n  export let easing = t => t;\n\n  $: gradient = makeGradient(\n    palette,\n    stops\n  );\n  $: colors = Array.from(\n    { length: stepsCount },\n    (_, i) => gradient(easing(i / (stepsCount - 1)))\n  );\n</script>\n\n<style>\n.gradient {\n  display: flex;\n  height: 100%;\n}\n\n.gradient div {\n  flex: 1;\n}\n</style>\n\n<div class=\"gradient\">\n  {#each colors as color}\n    <div style=\"background-color: {color}\"></div>\n  {/each}\n</div>",
    "<script>\n  import ColorPicker from './ColorPicker.svelte';\n\n  import { createEventDispatcher } from 'svelte';\n  import { between, swap, insert, remove, set } from './utils';\n\n  export let value;\n  export let palette;\n  export let availableColors;\n\n  const dispatch = createEventDispatcher();\n\n  let container;\n  let dragging = false;\n  let draggingIndex;\n  let colorPickerPos = null;\n\n  function handleMouseMove(e) {\n    if (dragging) {\n      e.preventDefault();\n\n      const newPos = between(0, 1, posFromPageX(e.pageX));\n      const stops = set(value, newPos, draggingIndex).sort((a, b) => a - b);\n\n      let newIndex = draggingIndex;\n      if (newPos < value[draggingIndex - 1]) {\n        newIndex -= 1;\n      } else if (newPos > value[draggingIndex + 1]) {\n        newIndex += 1;\n      }\n\n      if (newIndex !== draggingIndex) {\n        dispatch('input', {\n          stops,\n          palette: swap(palette, newIndex, draggingIndex)\n        });\n        draggingIndex = newIndex;\n      } else {\n        dispatch('input', { stops });\n      }\n    }\n  }\n\n  function handleMouseUp() {\n    dragging = false;\n  }\n\n  let mousedownTime;\n  function handleStopMouseDown(e, i) {\n    e.preventDefault();\n    dragging = true;\n    draggingIndex = i;\n    mousedownTime = Date.now();\n  }\n\n  function handleStopMouseUp(e, i) {\n    if (Date.now() - mousedownTime < 300 && !e.altKey) {\n      colorPickerPos = value[i];\n    }\n  }\n\n  function openColorPickerAt(value) {\n    colorPickerPos = value;\n  }\n\n  function closeColorPicker() {\n    colorPickerPos = null;\n  }\n\n  function posFromPageX(pageX) {\n    const { width, left } = container.getBoundingClientRect();\n    return (pageX - left) / width;\n  }\n\n  function handlePickerOpen(e) {\n    openColorPickerAt(posFromPageX(e.pageX));\n  }\n\n  function handleColorPick({ detail: color }) {\n    if (colorPickerPos !== null) {\n      for (let i = value.length - 1; i >= 0; i -= 1) {\n        if (colorPickerPos === value[i]) {\n          dispatch('input', {\n            palette: set(palette, color, i),\n          });\n          break;\n        }\n\n        if (colorPickerPos > value[i]) {\n          dispatch('input', {\n            stops: insert(value, colorPickerPos, i + 1),\n            palette: insert(palette, color, i + 1),\n          });\n          break;\n        }\n      }\n      closeColorPicker();\n    }\n  }\n\n  function handleColorClick(e, i) {\n    if (e.altKey) {\n      e.preventDefault();\n      dispatch('input', {\n        stops: remove(value, i),\n        palette: remove(palette, i)\n      });\n    }\n  }\n\n  let altPressed = false;\n  function handleAltPressed(e) {\n    altPressed = e.keyCode === 18;\n  }\n\n  function handleColorPickerEsc(e) {\n    altPressed = false;\n    if (e.keyCode === 27) {\n      closeColorPicker();\n    }\n  }\n\n  $: getCursor = (i) => {\n    if (altPressed) {\n      return 'not-allowed';\n    }\n    if (draggingIndex === i && dragging) {\n      return 'grabbing';\n    }\n\n    return 'grab';\n  };\n</script>\n\n<style>\n  .container {\n    padding: 30px 40px;\n  }\n\n  .stops {\n    position: relative;\n    height: 30px;\n  }\n\n  .bar {\n    position: absolute;\n    height: 6px;\n    background-color: #EEE;\n    position: absolute;\n    top: 50%;\n    margin-top: -3px;\n    left: 0;\n    right: 0;\n    cursor: cell;\n  }\n\n  .stop {\n    width: 10px;\n    height: 10px;\n    top: 50%;\n    z-index: 1;\n    background-color: currentColor;\n    border: 3px solid #FFF;\n    box-shadow: rgba(0, 0, 0, 0.2) 0 0 1px 1px, rgba(0, 0, 0, 1) 0 0 1px inset;\n    position: absolute;\n    transform: translate(-50%, -50%) rotate(45deg);\n  }\n\n  .colorPickerDropdown {\n    position: absolute;\n    z-index: 1;\n    top: 50%;\n    margin-top: 20px;\n    transform: translate(-50%, 0);\n  }\n\n  .colorPickerDropdown::before {\n    content: '';\n    position: absolute;\n    left: 50%;\n    height: 30px;\n    bottom: 100%;\n    margin-bottom: -10px;\n    width: 1px;\n    transform: translateX(-50%);\n    background-color: #000000;\n  }\n</style>\n\n<svelte:body\n  on:mousemove={handleMouseMove}\n  on:mouseup={handleMouseUp}\n  on:keyup={handleColorPickerEsc}\n  on:keydown={handleAltPressed}\n  />\n\n<div class=\"container\">\n  <div class=\"stops\" bind:this={container}>\n    {#each value as stop, i}\n      <div\n        on:mousedown={e => handleStopMouseDown(e, i)}\n        on:mouseup={e => handleStopMouseUp(e, i)}\n        on:click={e => handleColorClick(e, i)}\n        style=\"\n          left: {stop * 100}%;\n          color: {palette[i]};\n          z-index: {draggingIndex === i ? 2 : 1};\n          cursor: {getCursor(i)};\n        \"\n        class=\"stop\" />\n    {/each}\n\n    {#if colorPickerPos !== null}\n      <div class=\"colorPickerDropdown\" style=\"left: {colorPickerPos * 100}%;\">\n        <ColorPicker\n          availableColors={availableColors}\n          on:pick={handleColorPick}\n          />\n      </div>\n    {/if}\n\n    <div class=\"bar\" on:click={handlePickerOpen} />\n  </div>\n</div>"
  ],
  "names": [],
  "mappings": "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"
}